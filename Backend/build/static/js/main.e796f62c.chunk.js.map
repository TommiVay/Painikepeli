{"version":3,"sources":["components/Button.js","services/clicks.js","components/Infopanel.js","components/Notification.js","components/RestartButton.js","components/RestartMessage.js","components/NightmodeToggle.js","App.js","index.js"],"names":["Button","points","handleClick","className","onClick","addClick","a","axios","get","baseUrl","response","data","Infopanel","clicks","Notification","notification","RestartButton","restartHandler","theme","style","color","background","RestartMessage","NightmodeToggle","toggleTheme","backgroundColor","App","useState","setPoints","setNotification","nextWin","setNextwin","setTheme","useEffect","localPoints","window","localStorage","getItem","localTheme","clickService","setItem","win","clicksToWin","message","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e796f62c.chunk.js","sourcesContent":["import React from 'react'\nimport '../app.css'\n\nconst Button = ({ points, handleClick }) => {\n  if (points < 1) {\n    return null\n  }\n  return (\n    <div>\n      <button className=\"btn\" onClick={() => handleClick()}>Click!</button>\n    </div>\n  )\n}\n\nexport default Button","import axios from 'axios'\nconst baseUrl = 'api/clicks'\n\nconst addClick = async () => {\n  const response = await axios.get(baseUrl + '/add')\n  return response.data\n}\n\nexport default { addClick }","import React from 'react'\n\nconst Infopanel = ({ clicks, points }) => {\n  if (!clicks) {\n    return(\n    <div>\n      <h1>Your points: {points}</h1>\n    </div>\n    )\n  }\n  return (\n    <div>\n      <h1>Your points: {points}</h1>\n      <h1>Next win in {clicks} clicks!</h1>\n    </div>\n  )\n}\n\nexport default Infopanel","import React from 'react'\n\n\n\n\nconst Notification = ({ notification }) => {\n  if (!notification) {\n    return null\n  }\n\n  return (\n    <div className='notification'>\n      {notification}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\nimport '../app.css'\n\nconst RestartButton = ({ points, restartHandler, theme }) => {\n  if (points > 0) {\n    return null\n  }\n\n  const style = {\n    color: theme === 'day' ? 'white' : '#121212',\n    background: theme === 'day' ? '#121212' : 'white',\n  }\n\n  return (\n    <div>\n      <button style = {style} className='restartbtn' onClick={restartHandler} >Restart</button>\n    </div>\n  )\n}\n\n\nexport default RestartButton","import React from 'react'\n\nconst RestartMessage = ({points, theme}) => {\n  if (points > 0) {\n    return null\n  }\n  const style = {\n    color: theme === 'day' ? 'black' : 'white',\n  }\n  return (\n    <div style={style} className='notification'>\n      You have run out of points!\n    </div>\n  )\n}\n\nexport default RestartMessage","import React from 'react'\nimport '../app.css'\n\nconst NightmodeToggle = ({toggleTheme, theme}) => {\n  const style = {\n    color: theme === 'day' ? 'white' : 'black',\n    backgroundColor: theme === 'day' ? '#121212' : 'white'\n  }\n\n  return (\n    <div >\n      <button style={style} className='themeButton' onClick={toggleTheme}>\n        Switch theme\n      </button>\n    </div>\n  )\n}\n\nexport default NightmodeToggle","import React, { useState, useEffect } from 'react'\nimport Button from './components/Button'\nimport clickService from './services/clicks'\nimport Infopanel from './components/Infopanel'\nimport Notification from './components/Notification'\nimport './app.css'\nimport RestartButton from './components/RestartButton'\nimport RestartMessage from './components/RestartMessage'\nimport NightmodeToggle from './components/NightmodeToggle'\n\n\nfunction App() {\n  const [points, setPoints] = useState(null)\n  const [notification, setNotification] = useState(null)\n  const [nextWin, setNextwin] = useState(null)\n  const [theme, setTheme] = useState('day')\n\n  //checks if user has played before and has points\n  //initializes 20 points if new user or 0 points\n  useEffect(() => {\n    const localPoints = window.localStorage.getItem('points')\n    const localTheme = window.localStorage.getItem('theme')\n    if (localTheme) {\n      setTheme(localTheme)\n    }\n    if (localPoints) {\n      setPoints(window.localStorage.getItem('points'))\n    } else {\n      restartHandler()\n    }\n  }, [])\n\n\n  //shows notification for 2 seconds\n  const notify = (message) => {\n    setNotification(message)\n    setTimeout(() => setNotification(null), 2000)\n  }\n\n  //handles the main button click\n  //updates players points\n  //subtracts 1 point for every click\n  //if the click won, adds the win amount to points and show notification\n  //checks if player has run out of points and notifies about it\n  const handleClick = async () => {\n    const response = await clickService.addClick()\n    window.localStorage.setItem('points', points - 1 + response.win)\n    setPoints(points - 1 + response.win)\n    setNextwin(response.clicksToWin)\n    if (response.win !== 0) {\n      notify(`You won ${response.win} points!`)\n    }\n  }\n\n  //sets players points to 20\n  const restartHandler = () => {\n    setPoints(20)\n    window.localStorage.setItem('points', 20)\n  }\n\n\n//toggles the used theme and sets it to localstorage\n  const toggleTheme = () => {\n    if (theme === 'day') {\n      window.localStorage.setItem('theme', 'night')\n      setTheme('night')\n    } else {\n      window.localStorage.setItem('theme', 'day')\n      setTheme('day')\n    }\n  }\n\n  return (\n    <div className='container'\n    style={{\n      background: theme === 'night' ? '#121212' : '#fff',\n      color: theme === 'night' ? '#fff' : '#121212',\n    }}>\n      <div className='topContainer'>\n        <Notification notification={notification} />\n        <RestartMessage points={points} theme={theme}/>\n        <NightmodeToggle toggleTheme={toggleTheme} theme={theme}/>\n      </div>\n      <div className='centerContainer'>\n        <Button points={points} handleClick={handleClick} />\n        <RestartButton points={points} restartHandler={restartHandler} theme={theme} />\n      </div>\n      <div className='bottomContainer'>\n        <Infopanel clicks={nextWin} points={points} />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}