{"version":3,"sources":["components/Button.js","services/clicks.js","components/UserPoints.js","components/ClicksToWin.js","components/Notification.js","components/RestartButton.js","App.js","index.js"],"names":["Button","points","handleClick","className","onClick","addClick","a","axios","get","baseUrl","response","data","UserPoints","ClicksToWin","clicks","Notification","notification","message","style","color","type","fontSize","fontWeight","padding","marginBottom","position","RestartButton","restartHandler","notify","App","useState","setPoints","setNotification","nextWin","setNextwin","useEffect","window","localStorage","getItem","setTimeout","clickService","setItem","win","clicksToWin","ReactDOM","render","document","getElementById"],"mappings":"mNAceA,G,KAXA,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YACxB,OAAID,EAAS,EACJ,KAGP,6BACE,4BAAQE,UAAU,MAAMC,QAAS,kBAAMF,MAAvC,a,iBCDS,GAAEG,SALH,uCAAG,4BAAAC,EAAA,sEACQC,IAAMC,IAAIC,wCADlB,cACTC,EADS,yBAERA,EAASC,MAFD,2CAAH,sDCOCC,EARI,SAAC,GAAgB,IAAdX,EAAa,EAAbA,OACpB,OACE,6BACE,4CAAkBA,KCSTY,EAZK,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrB,OAAKA,EAKH,6BACE,2CAAiBA,EAAjB,aALK,MCuBIC,EAtBM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACtB,IAAKA,EAAaC,QAChB,OAAO,KAGT,IAAMC,EAAQ,CACZC,MAA4B,OAArBH,EAAaI,KAAgB,MAAQ,QAC5CC,SAAU,GACVC,WAAY,OACZC,QAAS,GACTC,aAAc,GACdC,SAAU,SAIZ,OACE,yBAAKP,MAAOA,GACTF,EAAaC,UCPLS,EAZO,SAAC,GAAwC,IAAtCzB,EAAqC,EAArCA,OAAQ0B,EAA6B,EAA7BA,eAA6B,EAAbC,OAC/C,OAAI3B,EAAS,EACJ,KAGP,6BACE,4BAAQE,UAAU,aAAaC,QAASuB,GAAxC,aCsESE,MApEf,WAAgB,IAAD,EACeC,mBAAS,MADxB,mBACN7B,EADM,KACE8B,EADF,OAE2BD,mBAAS,CAAEb,QAAS,OAF/C,mBAEND,EAFM,KAEQgB,EAFR,OAGiBF,mBAAS,MAH1B,mBAGNG,EAHM,KAGGC,EAHH,KAObC,qBAAU,WACYC,OAAOC,aAAaC,QAAQ,UAE9CP,EAAUK,OAAOC,aAAaC,QAAQ,WAEtCX,MAED,IAKH,IAAMC,EAAS,SAACX,GAA2B,IAAlBG,EAAiB,uDAAV,MAC9BY,EAAgB,CAAEf,UAASG,SACd,QAATA,GACFmB,YAAW,kBAAMP,EAAgB,CAAEf,QAAS,SAAS,MAQnDf,EAAW,uCAAG,4BAAAI,EAAA,sEACKkC,EAAanC,WADlB,OACZK,EADY,OAElB0B,OAAOC,aAAaI,QAAQ,SAAUxC,EAAS,EAAIS,EAASgC,KAC5DX,EAAU9B,EAAS,EAAIS,EAASgC,KAChCR,EAAWxB,EAASiC,aACC,IAAjBjC,EAASgC,KACXd,EAAO,WAAD,OAAYlB,EAASgC,IAArB,aAEM,GAAVzC,GACF2B,EAAO,8BAA+B,WATtB,2CAAH,qDAeXD,EAAiB,WACrBI,EAAU,IACVK,OAAOC,aAAaI,QAAQ,SAAU,IACtCT,EAAgB,CAAEf,QAAS,QAG7B,OACE,yBAAKd,UAAU,aACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAca,aAAcA,KAE9B,yBAAKb,UAAU,mBACb,kBAAC,EAAD,CAAQF,OAAQA,EAAQC,YAAaA,IACrC,kBAAC,EAAD,CAAeD,OAAQA,EAAQ0B,eAAgBA,KAEjD,yBAAKxB,UAAU,mBACb,kBAAC,EAAD,CAAYF,OAAQA,IACpB,kBAAC,EAAD,CAAaa,OAAQmB,OCpE7BW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.1f0e465a.chunk.js","sourcesContent":["import React from 'react'\nimport '../app.css'\n\nconst Button = ({ points, handleClick }) => {\n  if (points < 1) {\n    return null\n  }\n  return (\n    <div>\n      <button className=\"btn\" onClick={() => handleClick()}>Click!</button>\n    </div>\n  )\n}\n\nexport default Button","import axios from 'axios'\nconst baseUrl = 'http://localhost:3003/api/clicks'\n\nconst addClick = async () => {\n  const response = await axios.get(baseUrl + '/add')\n  return response.data\n}\n\nexport default { addClick }","import React from 'react'\n\nconst UserPoints = ({ points }) => {\n  return (\n    <div>\n      <h1>Your points: {points}</h1>\n    </div>\n  )\n}\n\nexport default UserPoints","import React from 'react'\n\nconst ClicksToWin = ({ clicks }) => {\n  if (!clicks) {\n    return null\n  }\n\n  return (\n    <div>\n      <h1>Next win in {clicks} clicks!</h1>\n    </div>\n  )\n}\n\nexport default ClicksToWin","import React from 'react'\n\n\n\n\nconst Notification = ({ notification }) => {\n  if (!notification.message) {\n    return null\n  }\n\n  const style = {\n    color: notification.type == 'win' ? 'red' : 'black',\n    fontSize: 50,\n    fontWeight: 'bold',\n    padding: 10,\n    marginBottom: 10,\n    position: 'float'\n\n  }\n\n  return (\n    <div style={style}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\nimport '../app.css'\n\nconst RestartButton = ({ points, restartHandler, notify }) => {\n  if (points > 0) {\n    return null\n  }\n  return (\n    <div>\n      <button className='restartbtn' onClick={restartHandler} >Restart</button>\n    </div>\n  )\n}\n\n\nexport default RestartButton","import React, { useState, useEffect } from 'react'\nimport Button from './components/Button'\nimport clickService from './services/clicks'\nimport UserPoints from './components/UserPoints'\nimport ClicksToWin from './components/ClicksToWin'\nimport Notification from './components/Notification'\nimport './app.css'\nimport RestartButton from './components/RestartButton'\n\n\n\nfunction App() {\n  const [points, setPoints] = useState(null)\n  const [notification, setNotification] = useState({ message: null })\n  const [nextWin, setNextwin] = useState(null)\n\n  //checks if user has played before and has points\n  //initializes 20 points if new user or 0 points\n  useEffect(() => {\n    const localPoints = window.localStorage.getItem('points')\n    if (localPoints) {\n      setPoints(window.localStorage.getItem('points'))\n    } else {\n      restartHandler()\n    }\n  }, [])\n\n\n  //shows notification\n  //win notification stays up for 2 seconds\n  const notify = (message, type = 'win') => {\n    setNotification({ message, type })\n    if (type === 'win')\n      setTimeout(() => setNotification({ message: null }), 2000)\n  }\n\n  //handles the main button click\n  //updates players points\n  //subtracts 1 point for every click\n  //if the click won, adds the win amount to points and show notification\n  //checks if player has run out of points and notifies about it\n  const handleClick = async () => {\n    const response = await clickService.addClick()\n    window.localStorage.setItem('points', points - 1 + response.win)\n    setPoints(points - 1 + response.win)\n    setNextwin(response.clicksToWin)\n    if (response.win !== 0) {\n      notify(`You won ${response.win} points!`)\n    }\n    if (points == 1) {\n      notify('You have run out of points!', 'restart')\n    }\n  }\n\n\n  //sets players points to 20\n  const restartHandler = () => {\n    setPoints(20)\n    window.localStorage.setItem('points', 20)\n    setNotification({ message: null })\n  }\n\n  return (\n    <div className='container'>\n      <div className='topContainer'>\n        <Notification notification={notification} />\n      </div>\n      <div className='centerContainer'>\n        <Button points={points} handleClick={handleClick} />\n        <RestartButton points={points} restartHandler={restartHandler} />\n      </div>\n      <div className='bottomContainer'>\n        <UserPoints points={points} />\n        <ClicksToWin clicks={nextWin} />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}